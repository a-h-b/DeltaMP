# Define Variables
while read var val; do unset $var ; if [[ $val == "(["* ]]; then declare -A $var="`echo $val | sed 's/].\"/]=\"/g'`" ; else declare $var="$val" ; fi ; done < config/env.txt
. $BIN/check_previous_step.sh

# load modules
module load deltamp/${VERSION[DELTAMP]}

# Library to analyse
LIB_CHUNK=(`sed -n $ARRAY_TASK,$(($ARRAY_TASK+9))p config/lib3.list | cut -d " " -f 2`)
cd libraries

for LIB_NAME in "${LIB_CHUNK[@]}"
do
	sleep 1
	(
	# sff to fasta + qual
	if [ $DEMULTI == "yes" ]
	then
		mothur "#set.dir(input=./, output=./fasta);
		sffinfo(sff=$LIB_NAME.sff)"
	else
		mothur "#set.dir(input=./sff, output=./fasta);
		sffinfo(sff=$LIB_NAME.sff)"
	fi
	
	# Stat for figures
	cd fasta
	twofasta $LIB_NAME.fasta | grep -v "^>" | awk '{print length($1)}' > ../raw_stat/$LIB_NAME.length
	twofasta $LIB_NAME.qual | grep -v "^>" | awk '{sum=0;for(i=1;i<=NF;i++){sum+=$i};print sum/NF}' > ../raw_stat/$LIB_NAME.meanqual
	twofasta $LIB_NAME.qual | grep -v "^>" | awk '{for(i=1;i<=NF;i++){sum[i]+=$i;nb[i]+=1}}END{for(i=1;sum[i];i++){printf "%s\t",sum[i]/nb[i]}}' | sed 's/\t$/\n/' > ../raw_stat/$LIB_NAME.meanposqual
	) &
done
wait

# list files and directories
. $BIN/list_step_files.sh

echo END
