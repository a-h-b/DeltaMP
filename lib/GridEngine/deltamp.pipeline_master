#!/bin/bash

## Create directories and symlink to files of REF_SUBPROJECT
echo "qsub -cwd -N $DELTAMP_VER.pinit.$SUBPROJECT $BIN/pinit.sh"

## Copy/download libraries data in project folder [and extract]
echo "qsub -cwd -N $DELTAMP_VER.pget.$SUBPROJECT -hold_jid $DELTAMP_VER.pinit.$SUBPROJECT $BIN/pget.sh"

## Demultiplex
if [ $TECH == "454" ] && [ $DEMULTI == "no" ]
then
	echo "qsub -cwd -N $DELTAMP_VER.${TECH}_demulti.$SUBPROJECT -t 1-${LIB1_SIZE} -tc $MAX_TASK -hold_jid $DELTAMP_VER.pget.$SUBPROJECT $BIN/${TECH}_demulti.sh"
fi

## Quality check
echo "qsub -cwd -N $DELTAMP_VER.${TECH}_${RAW_EXT}.$SUBPROJECT -t 1-${LIB3_SIZE} -tc $MAX_TASK -hold_jid $DELTAMP_VER.pget.$SUBPROJECT,$DELTAMP_VER.${TECH}_demulti.$SUBPROJECT $BIN/${TECH}_${RAW_EXT}.sh"
if [ $TECH == "Illumina" ]
then
	echo "qsub -cwd -N $DELTAMP_VER.${TECH}_pair_end.$SUBPROJECT -t 1-${LIB3_SIZE} -tc $MAX_TASK -hold_jid $DELTAMP_VER.${TECH}_${RAW_EXT}.$SUBPROJECT $BIN/${TECH}_pair_end.sh"
fi
echo "qsub -cwd -N $DELTAMP_VER.${TECH}_raw_stat.$SUBPROJECT -t 1-${LIB1_SIZE} -tc $MAX_TASK -hold_jid $DELTAMP_VER.${TECH}_${RAW_EXT}.$SUBPROJECT,$DELTAMP_VER.${TECH}_pair_end.$SUBPROJECT $BIN/${TECH}_raw_stat.sh"
echo "qsub -cwd -N $DELTAMP_VER.${TECH}_opt.$SUBPROJECT -t 1-${LIB3_SIZE} -tc $MAX_TASK -hold_jid $DELTAMP_VER.${TECH}_raw_stat.$SUBPROJECT $BIN/${TECH}_opt.sh"
echo "qsub -cwd -N $DELTAMP_VER.${TECH}_quality.$SUBPROJECT -hold_jid $DELTAMP_VER.${TECH}_opt.$SUBPROJECT $BIN/${TECH}_quality.sh"

## Trim (,align (,subsample)) , chimera check in array jobs, and merge
if [ $CUT_DB == "yes" ] && [ ! -f $DBFOLD/$DBCUT.fasta ]
then
	echo "qsub -cwd -N $DELTAMP_VER.cut_db.$SUBPROJECT -hold_jid $DELTAMP_VER.${TECH}_quality.$SUBPROJECT $BIN/cut_db.sh"
fi
echo "qsub -cwd -N $DELTAMP_VER.trim.$SUBPROJECT -t 1-$SAMP_SIZE -tc $MAX_TASK -hold_jid $DELTAMP_VER.cut_db.$SUBPROJECT,$DELTAMP_VER.${TECH}_quality.$SUBPROJECT $BIN/trim.sh"
echo "qsub -cwd -N $DELTAMP_VER.merge.$SUBPROJECT -hold_jid $DELTAMP_VER.trim.$SUBPROJECT $BIN/merge.sh"

## OTUs and taxonomic assignment
echo "qsub -cwd -N $DELTAMP_VER.OTU.$SUBPROJECT -hold_jid $DELTAMP_VER.merge.$SUBPROJECT $BIN/OTU.sh"
echo "qsub -cwd -N $DELTAMP_VER.id.$SUBPROJECT -hold_jid $DELTAMP_VER.OTU.$SUBPROJECT $BIN/id.sh"

## OTU tables, documentation, logs and copy back to output directory
echo "qsub -cwd -N $DELTAMP_VER.end.$SUBPROJECT -hold_jid $DELTAMP_VER.id.$SUBPROJECT $BIN/end.sh"

## Archive processing files
echo 'export SUBMIT_OPTS="-N '$DELTAMP_VER'.processing_archiver.'$SUBPROJECT' -o /work/'$USER'/'$SUBPROJECT'/log/processing_archiver.out -e /work/'$USER'/'$SUBPROJECT'/log/processing_archiver.err -hold_jid '$DELTAMP_VER'.end.'$SUBPROJECT' -l h_rt=24:00:00,h_vmem=6G -binding linear:1"'
echo "submit-archiver $EXEC/archives/$SUBPROJECT.processing $OUT/$SUBPROJECT.processing.files.tar.gz"

## Archive outputs
echo 'export SUBMIT_OPTS="-N '$DELTAMP_VER'.outputs_archiver.'$SUBPROJECT' -o /work/'$USER'/'$SUBPROJECT'/log/output_archiver.out -e /work/'$USER'/'$SUBPROJECT'/log/output_archiver.err -hold_jid '$DELTAMP_VER.$TECH'_quality.'$SUBPROJECT','$DELTAMP_VER'.end.'$SUBPROJECT' -l h_rt=24:00:00,h_vmem=6G -binding linear:1"'
echo "submit-archiver $EXEC/archives/$SUBPROJECT.outputs $OUT/$SUBPROJECT.outputs.tar.gz"

## Archive raw reads
echo 'export SUBMIT_OPTS="-N '$DELTAMP_VER.$RAW_EXT'_archiver.'$SUBPROJECT' -o /work/'$USER'/'$SUBPROJECT'/log/'$RAW_EXT'_archiver.out -e /work/'$USER'/'$SUBPROJECT'/log/'$RAW_EXT'_archiver.err -hold_jid '$DELTAMP_VER.$TECH'_quality.'$SUBPROJECT','$DELTAMP_VER.${TECH}'_demulti.'$SUBPROJECT' -l h_rt=24:00:00,h_vmem=6G -binding linear:1"'
echo "submit-archiver $EXEC/libraries/$RAW_EXT $OUT/$SUBPROJECT.$RAW_EXT.tar.gz"

## Document
echo "qsub -cwd -N $DELTAMP_VER.doc.$SUBPROJECT -hold_jid *.$SUBPROJECT $BIN/doc.sh"
